{"version":3,"file":"static/webpack/static/development/pages/index.js.65bff7f9e38b54be9c22.hot-update.js","sources":["webpack:///./components/Counter.js","webpack:///./components/NameTag.js","webpack:///./redux/actions.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n// import { startClock, addCount, serverRenderClock } from '../redux/store'\nimport { addCount, changeName } from '../redux/actions';\n\nclass Counter extends Component {\n\nstatic getInitialProps (props) {\n  // store.dispatch(serverRenderClock(isServer))\n  store.dispatch(addCount())\n  return { isServer }\n}\n  componentDidMount(){\n    // console.log(props)\n  }\n  render() {\n    return (\n      <div>\n        FROM COUNTER\n\n        <h3>The count is : {this.props.count} </h3>\n        <button onClick={this.props.addCount}>INCREMENT</button>\n      </div>\n    )\n  }\n}\n\n\n//Retrieve state to use in render:\nconst mapStateToProps = (state) => {\n  console.log('MaStToProps: ', state)\n  return {\n    count: state.count\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // Retrieves action in store, and makes accressible as \"addCount\"\n    addCount: bindActionCreators(addCount, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter)","import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\n// import { startClock, changeName, addCount, serverRenderClock } from '../redux/store'\nimport { addCount, changeName } from '../redux/actions';\n\nconst NameTag = (props) => {\n  return (\n    <div>\n       FROM NAMETAG\n       <h3>Name is: {props.name}</h3>\n       <button onClick={props.changeName}>CHange the name</button>\n    </div>\n  )\n}\n\n\n\n//Retrieve state to use in render:\nconst mapStateToProps = (state) => {\n  console.log('MaStToProps: ', state)\n  return {\n    name: state.name\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // Retrieves action in store, and makes accressible as \"addCount\"\n    // BINDS the ACTION CREATOR FN, dispatch\n    changeName: bindActionCreators(changeName, dispatch)\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NameTag)","\n// ACTION CREATOR FUNCTION: returns a function which takes the dispatch;\nexport const addCount = () => dispatch => {\n  // Creates the action object;\n  const action = { type: actionTypes.ADD };\n  // returns the dispatch holding the action;\n  return dispatch(action)\n\n  //How the ORIGINAL EXAMPLE performs this in one line:\n  // return dispatch({ type: actionTypes.ADD })\n}\n\n// ACTION CREATOR FUNCTION: returns a function which takes the dispatch;\nexport const changeName = () => dispatch => {\n  // Creates the action object;\n  const action = { type: actionTypes.CHANGE_NAME };\n  // returns the dispatch holding the action;\n  return dispatch(action)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAOA;AAEA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAjBA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;AANA;AACA;AACA;AAsBA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AARA;AACA;AAUA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;;;;;;;A","sourceRoot":""}